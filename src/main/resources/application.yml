server:
    port: 8080
    context-path: #/liuzh/

# 配置log
logging:
    config: classpath:log4j2.yml

# 测试数据(测试从application.yml中获取数据)
environments:
    dev:
        url: http://dev.bar.com
        name: Developer Setup
    prod:
        url: http://foo.bar.com
        name: My Cool App
my:
   servers:
       - dev.bar.com
       - foo.bar.com

# spring配置
spring:
    # 数据源配置
    datasource:
        # 开发环境
        dev:
            name: test
            url: jdbc:mysql://127.0.0.1:3306/test?useSSL=false&characterEncoding=UTF8&useUnicode=true
            username: root
            password: root
            # 使用druid数据源
            type: com.alibaba.druid.pool.DruidDataSource
            driver-class-name: com.mysql.jdbc.Driver
            filters: stat
            maxActive: 20
            initialSize: 1
            maxWait: 60000
            minIdle: 1
            timeBetweenEvictionRunsMillis: 60000
            minEvictableIdleTimeMillis: 300000
            validationQuery: select 'x'
            testWhileIdle: true
            testOnBorrow: false
            testOnReturn: false
            poolPreparedStatements: true
            maxOpenPreparedStatements: 20
        # 生产环境
        prod:
            name: test
            url: jdbc:mysql://127.0.0.1:3306/test1?useSSL=false&characterEncoding=UTF8&useUnicode=true
            username: root
            password: root
            # 使用druid数据源
            type: com.alibaba.druid.pool.DruidDataSource
            driver-class-name: com.mysql.jdbc.Driver
            filters: stat
            maxActive: 20
            initialSize: 1
            maxWait: 60000
            minIdle: 1
            timeBetweenEvictionRunsMillis: 60000
            minEvictableIdleTimeMillis: 300000
            validationQuery: select 'x'
            testWhileIdle: true
            testOnBorrow: false
            testOnReturn: false
            poolPreparedStatements: true
            maxOpenPreparedStatements: 20
    mvc:
        view:
            prefix: /templates/
            suffix: .ftl
    freemarker:
        cache: false
        request-context-attribute: request
    #配置jpa,自动映射类到表
    jpa:
        database: MYSQL
        show-sql: true
        hibernate:
            ddlAuto: update
            naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
        properties:
            hibernate:
                dialect: org.hibernate.dialect.MySQL5Dialect
    output:
        ansi: enabled
#以下属性不可用
#mybatis:
#    pagehelper:
#        dialect: mysql
#        reasonable: true
#        supportMethodsArguments: true
#        returnPageInfo: check
#        params: count=countSql
#    mapper:
#        mappers: tk.mybatis.springboot.util.MyMapper
#        notEmpty: true
#        style: camelhump
#    sqlSessionFactoryBean:
#        mapperLocations:
#            - classpath:mapper/*.xml
#            - classpath:mapper2/*.xml
#        typeAliasesPackage: tk.mybatis.springboot.model
#    mapperScanner:
#        basePackage: tk.mybatis.springboot.mapper